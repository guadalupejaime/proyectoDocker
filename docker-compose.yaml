version: "3.8"
services:
  mongodb:
    image: mongo
    container_name: mongodb
    restart: on-failure:5
    ports:
      - "27017:27017"
    networks:
      - custom
    env_file:
      - env.list
    volumes:
      - data:/data/db/
  mongo-express:
    image: mongo-express
    container_name: mongoexpress
    restart: on-failure:5
    ports:
      - "8081:8081"
    networks:
      - custom
    env_file:
      - env.list
    depends_on:
      - mongodb
  scraper:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scraperapi
    networks:
      - custom
    env_file:
      - env.list
    restart: on-failure:5
    depends_on:
      - mongodb
    command:
      - ./scraper
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbit
    hostname: my-rabbit
    env_file:
      - env.list
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - custom
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: myapi
    networks:
      - custom
    env_file:
      - env.list
    restart: on-failure:5
    depends_on:
      - mongodb
      - rabbitmq
    command:
      - ./api
    ports:
      - "80:8080"
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure:10
    container_name: goworker
    networks:
      - custom
    env_file:
      - env.list
    volumes:
      - type: bind
        source: ./rabbit
        target: /proyecto/rabbit/
    depends_on:
      - rabbitmq
    command: ./rabbit
  frontend:
    build:
      context: ./containerE
      dockerfile: Dockerfile
    container_name: myfrontend
    networks:
      - custom
    restart: on-failure:5
    depends_on:
      - api
    ports:
      - "4200:4200"
    command: bash -c "ng serve --host 0.0.0.0 --port 4200"
volumes:
  db-data:
  data:

networks:
  custom:
    driver: bridge
